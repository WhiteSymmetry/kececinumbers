name: Build, Test, and Publish Package-Conda

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build-publish:
    runs-on: ubuntu-latest
    # Matrix stratejisini burada tanımlıyoruz
    strategy:
      matrix:
        python-version: ["3.11"] # Hangi Python versiyonları için çalıştırılacak

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Miniconda for Python ${{ matrix.python-version }}
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-activate-base: false
          python-version: "${{ matrix.python-version }}" # Matrix'ten gelen versiyonu kullan
          channels: conda-forge,defaults
          channel-priority: strict

      - name: Install Conda-Build and Conda-Verify
        run: conda install -n base conda-build -y

      - name: Build the package for Python ${{ matrix.python-version }}
        # Artık variant config'e ihtiyacımız yok, Python versiyonunu doğrudan belirtiyoruz
        run: |
          conda build . --python ${{ matrix.python-version }} --output-folder ./dist
          if [ -z "$(ls -A dist)" ]; then
            echo "HATA: Hiçbir conda paketi oluşturulmadı."
            exit 1
          fi
          echo "Oluşturulan paket:"
          ls -l dist

      - name: Create a test environment
        run: |
          conda create -n test-env -y python=${{ matrix.python-version }}
          conda install -n test-env -y numpy matplotlib sympy
          conda run -n test-env pip install numpy-quaternion
      
      - name: Install and test the built package
        run: |
          PACKAGE_FILE=$(ls dist/*.conda | head -n 1)
          conda install -n test-env -y "$PACKAGE_FILE"
          conda run -n test-env python -c "import kececinumbers; print('✅ Import successful for Python ${{ matrix.python-version }}!')"

      - name: Build the package
        run: |
          export PKG_VERSION=$(git describe --tags --abbrev=0 | sed 's/^v//')
          echo "Building version: $PKG_VERSION"
          # Hata durumunda bile devam etmesi için || true ekleyerek build loglarını görelim
          conda build . --output-folder ./dist || true
      
      # ===================================================================
      # === YENİ HATA AYIKLAMA ADIMI ===
      # Bu adım, upload'dan önce dosya sisteminin durumunu bize gösterecek
      - name: Debug - List files in the workspace
        run: |
          echo "--- Current Working Directory ---"
          pwd
          echo "--- Recursive file listing ---"
          ls -R
          echo "--- End of file listing ---"
      # ===================================================================

      - name: Upload to Anaconda Cloud
        if: success()
        env:
          ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        run: |
          # 'find' komutu ile dist klasörünün içindeki tüm .conda dosyalarını bul
          PACKAGE_FILES=$(find dist -name "*.conda")
          
          # Bulunan dosya(lar)ın varlığını kontrol et
          if [ -z "$PACKAGE_FILES" ]; then
            echo "HATA: Yüklenecek .conda dosyası bulunamadı! Build adımı başarısız olmuş olabilir."
            exit 1
          fi

          echo "Yüklenecek paketler bulundu:"
          echo "$PACKAGE_FILES"
          
          conda install -n base -y anaconda-client
          # $PACKAGE_FILES değişkenini kullanarak bulunan dosyaları yükle
          conda run -n base anaconda -t $ANACONDA_TOKEN upload \
            $PACKAGE_FILES \
            --label main \
            --skip-existing
      - name: Cleanup test environment
        if: always()
        run: conda env remove -n test-env || true
